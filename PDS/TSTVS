TSTVS    TITLE 'D Y N A M I C CONSOLE MONITOR'
*---------------------------------------------------------------------*
*                                                                     *
* PROGRAM:                  TSTVS                                     *
* FUNCTION:                 Line-editor from the operator console     *
* PURPOSE:                  Edit crucial PDS members if the           *
*                           SUBSYSTEMS aren't available               *
*                           and create and submit jobs if necessary.  *
*                           Update of members will be done if the     *
*                           MSG   'EDT200A enter command...' has been *
*                           replied with 'U member' or 'UN member'    *
*                           If replied with 'A member' or 'AN member' *
*                           a new member will be created.             *
*                           If 'UN' or 'AN' specified, TSTVS will     *
*                           prompt you for a linenumber (COLS 73-80)  *
*                           if a new record has been made.            *
*                                                                     *
* PROCESSOR.                ASSEMBER-H VERSION 2/HL-ASM               *
*                                                                     *
* REGISTER ASSIGNMENT.      R0-R1          Reserved                   *
*                           R2             Contains number of records *
*                           R3             Save register for parm.    *
*                           R4             Address record input       *
*                           R5-R8          Work registers             *
*                           R9             4th base register          *
*                           R10            3rd base register          *
*                           R11            2nd base register          *
*                           R12            Address of workspace       *
*                           R13            Save area + first base reg.*
*                           R14-R15        Reserved                   *
* AUTHOR.                   Rob Prins - Jan 11, 1977                  *
*        PROGRAM STRUCTURE:                                           *
*                                                                     *
*        -------------        -------------        -------------      *
*        |  MAIN     |        | CHANGE    |        |  Insert/  |      *
*        |  routine  | <----> | subcommand| <----> |  Delete   |      *
*        |           |        | mode      |        |  routine  |      *
*        -------------        -------------        -------------      *
*             |                     |                                 *
*             V                     |                                 *
*        -------------              |                                 *
*        | DEL       |              |                                 *
*        | MEMBERS   |              |                                 *
*        | AND RDDIR |              |                                 *
*        -------------              |                                 *
*                                   |                                 *
*        _______________________________________________________      *
*             |                     |                    |            *
*        -------------        -------------        -------------      *
*        | PRINT     |        |  UPDIPL   |        |  SUBMIT   |      *
*        | routine   |        |  routine  |        |  routine  |      *
*        |           |        |           |        |           |      *
*        -------------        -------------        -------------      *
*        -------------        -------------        -------------      *
*        |  LIST     |        |  LINENUM  |        |   SAVE    |      *
*        |  routine  |        |  routine  |        |  routine  |      *
*        |           |        |           |        |           |      *
*        -------------        -------------        -------------      *
*        -------------        -------------        -------------      *
*        |  FIND     |        |           |        |           |      *
*        |  routine  |        |           |        |           |      *
*        |           |        |           |        |           |      *
*        -------------        -------------        -------------      *
*                                                                     *
*        Subroutines:                                                 *
*                    TSTVSALL:  Allocate the library                  *
*                    TSTVSCOM:  Process the commands                  *
*                    TSTVSSEC:  check security                        *
*                                                                     *
*        Note: Assemble TSTVS with SYSPARM(NOSEC) to bypass           *
*              the security check of RACF or ACF2                     *
*                                                                     *
*                                                                     *
*------------------------------------------ (C)-2022 Skybird systems -*
         EJECT
*---------------------------------------------------------------------*
*        Changelog:                                                   *
*---------------------------------------------------------------------*
*        Rob Prins: 1977/01/11. Initial version.                      *
*                                                                     *
*        Rob Prins: 1979/11/02.                                       *
*        Add subcommand 'R' (repeat lines).                           *
*                                                                     *
*        Rob Prins: 1979/12/04.                                       *
*        Change the design of TSTVS and add command 'ALLOC'.          *
*                                                                     *
*        Rob Prins: 1980/04/22.                                       *
*        Change start command for RDRTST from:                        *
*        "S RDRTST,M=membername" into                                 *
*        "S RDRTST,D=datasetname,M=membername" for VS1 and SVS submit.*
*        Error fixed in UPDIPL routine                                *
*                                                                     *
*        Rob Prins: 1985/05/13.                                       *
*        Add 'XLST' subcommand. This command is an extention of the   *
*        LIST subcommand. With 'XLST', all 80 columns of the records  *
*        will be displayed.                                           *
*                                                                     *
*        Rob Prins: 1986/02/12.                                       *
*        Add 'L' subcommand, alias of the 'LIST' subcommand.          *
*        Add 'R' command, rename of members. Syntax:'R MEMBER,NEWNAME'*
*        ADD 'F' subcommand, syntax: 'F $STRING$' initial find, or    *
*                'F', repeat find.                                    *
*        After 'SAVE' subcommand, leave subcommand mode.              *
*                                                                     *
*        Rob Prins: 1987/04/23.                                       *
*        Display entire line after match in 'F' subcommand,           *
*        Instead of the first 55 positions.                           *
*                                                                     *
*        Rob Prins: 1991/12/18                                        *
*        Retry maximum of 6 abends to prevent recursive abends.       *
*        ABEND90A fixed after first ABEND913 during open.             *
*        Reject 'SUBMIT' and 'PRINT' subcommand if JOBNAME=EDIT,      *
*        because EDIT can be a subsystem.                             *
*        Subcommand 'C ALL,...' added.                                *
*                                                                     *
*        Rob Prins: 1991/12/24 Christmas Supprise.                    *
*        ACF2 support added: TSTVS will ask for an authorized LOGONID *
*        and password. If the verification is successful, the LOGONID *
*        will be checked for the 'TSTVS' privilege (LIDI2F5)          *
*        If ACF2 is not active, the check will be bypassed and the    *
*        program password will be asked.                              *
*        MAX workspace size increased from 2999 to 3999               *
*                                                                     *
*        Rob Prins: 1992/12/18, Christmas Supprise.                   *
*        All the ACF2 macro's are deleted and replaced by RACROUTE    *
*        The TSTVS privilege has been replaced by a resource called   *
*        '$TSTVS' in the FACILITY class. So TSTVS can be used in both *
*        an ACF2 or a RACF environment                                *
*        The complete security check is now done in module TSTVSSEC   *
*                                                                     *
*        Rob Prins: 1993/07/26.                                       *
*        The "Key" in   "PDSLIST,key" has now a variable length       *
*                                                                     *
*        Rob Prins: 1993/07/29.                                       *
*        Add the RENAME command to rename datasets                    *
*        Remove the VS1 support. TSTVS assumes, that the operating    *
*        system is always MVS (ESA)                                   *
*        MSGID's changed from 'JCL' into 'EDT'.                       *
*                                                                     *
*        Rob Prins: 2019/09/04.                                       *
*        Remove the LINK to program SYP120, This program is not       *
*        a part of TSTVS, so this LINK is changed into a SVC 34       *
*                                                                     *
*------------------------------------------ (C)-2022 Skybird systems -*
         SPACE 2
TSTVS    CSECT
         SAVE  (14,12),,*
         USING TSTVS,R15               Get local addressability @911224
         LA    R11,SAVEA               Our save area            @911224
         ST    R13,SAVEA+4             Forward pointer          @911224
         ST    R11,8(0,R13)            Backward pointer         @911224
         LR    R13,R11                                          @911224
         B     START                                            @911224
         DS    0F                                               @911224
SAVEA    DC    18F'-1'
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
START    DS    0H
         DROP  R15                     Kill local addressability+911224
         LA    R11,2048(,R13)          Setup second             @911224
         LA    R11,2048(,R11)                      base         @911224
         LA    R10,2048(,R11)          Setup third              @911224
         LA    R10,2048(,R10)                      base         @911224
         LA    R9,2048(,R10)           Setup fourth             @911224
         LA    R9,2048(,R9)                        base         @911224
         USING SAVEA,R13,R11,R10,R9    Make TSTVS addressable   @911224
         L     R3,0(,R1)               Save parm (routing code)
         WTO   'EDT001I TSTVS Version 3.4 - &SYSDATE started',         *
               DESC=2,ROUTCDE=(2,3,7,8,11)                      @930729
         ST    R1,MSGID                save it's msgid          @930729
         CLC   0(2,R3),=H'0'           A parm in exec stmnt?
         BE    TSTVSRAC                No: take default routcde @921218
         LH    R6,0(,R3)               Length of parm
         LA    R3,2(,R3)               Point after length
         LR    R7,R6
         CH    R6,=H'2'                Length londer than 2?
         BH    MESS                    Yes: error msg and take default
LOOP     CLI   0(R3),C'0'              Numeric test
         BL    MESS                    Take defaults if not numeric
         LA    R3,1(,R3)               Next character to test
         BCT   R6,LOOP                 Branch for second test
         SR    R3,R7                   Restore address of parm
         BCTR  R7,0
         EX    R7,COMPPRM              Test routing code
         BNH   MESS                    Not > 0 take default routcde
         MVI   ZZZ-2,X'00'
         EX    R7,PACK1                Pack routing code
         CVB   R6,DWB                  Make binary
         BCTR  R6,0                    No shift is routine code 1
         XR    R7,R7
         IC    R7,=X'80'               Set high order bit bits 24-31
         SLL   R7,8                    Shift 8 bits to the left
         SRL   R7,0(R6)                Shift to correct routcde
         STH   R7,ZZZ-2                Store
         STH   R7,BBB-4                  Routing
         STH   R7,CCC-4                     Codes
         STH   R7,DDD-4                       into
         STH   R7,FFF-4                         WTOR
         STH   R7,GGG-4                           expansions
         STH   R7,HHH-4
         STH   R7,III-4
         STCM  R7,3,PARMROUT
         B     TSTVSRAC                Branch to security mod.  @921218
MESS     DS    0H
         LA    R1,MSG99
         MVC   MSG99+4(60),MSG03       Msg: EDT007E (default routcde)
         WTO   MF=(E,(1))
         B     TSTVSRAC                                         @921218
COMPPRM  CLC   0(0,R3),=C'00'          << executed >>
*---------------------------------------------------------------------*
* first call 'TSTVSSEC' to check the security
*---------------------------------------------------------------------*
TSTVSRAC DS    0H                                               @921218
         EXTRACT ADDRTIOT,FIELDS=TIOT  Obtain Task IO Table
         L     R3,ADDRTIOT             TIOT address in register 3
         CLC   0(8,R3),=CL8'EDIT'      Is JOBNAME=EDIT?'        @911218
         BNE   TSTVSC                  No: carry                @911224
         OI    SW02,$OPER              Mark jobname = EDIT
TSTVSC   DS    0H                                               @921218
*---------------------------------------------------------------------*
*
*        If you want to bypass the security check with RACF or ACF2
*        please assemble TSTVS with SYSPARM(NOSEC)
*
*---------------------------------------------------------------------*
         AIF   ('&SYSPARM' EQ 'NOSEC').NOSEC
         CALL  TSTVSSEC,((3))          Do first the sec. check  @921218
         LTR   R15,R15                 OK ??                    @921218
         BZ    TSTVSOK                 yes: use the facility    @921218
         L     R13,4(,R13)             pickup callers savearea  @921218
         RETURN (14,12),RC=8           terminate ....           @921218
.NOSEC   ANOP
TSTVSOK  DS    0H                                               @921218
         GETMAIN RU,LV=320000
         LR    R12,R1
         ST    R12,SAVEGETM            Save start adress workspace
         STM   R9,R13,RECOVER          Save registers for ESTAE
         ESTAE STAEEXIT                Establish ESTAE routine
TSTVSST  DS    0H
         L     R4,SAVEGETM             Address of workspace
         L     R5,=A(320000)           Maximum length (4000 records)
         LR    R6,R4                   Duplicate in register 6
         L     R7,=X'FF000000'         Padding character
         MVCL  R4,R6                   Fillup workspace with X'FF'
         L     R12,SAVEGETM            Restore start addr. workspace
         CALL  TSTVSCOM,(PARM)         Invoke TSTVS command processor
         B     BRLIST(R15)
BRLIST   B     TSTVSUPD                Update member
         B     TSTVSNEW                New member
         B     TSTVSDEL                Delete the member
         B     TSTVSUPD                Update the member
         B     TSTVSAL                 Allocate library
         B     TSTVSEOJ                End of TSTVS
         B     TSTVSREN                Rename a dataset         @930729
TSTVSUPD DS    0H
         BAL   R14,RDDIR               Test if member is in directory
         CLC   PARM33R(7),=C'PDSLIST'  List PDS?
         BE    TSTVSST                 Prompt for member name
         TM    SW01,$MEMFND            Is member present in directory?
         BNO   UPDERR                  No: give error message
         RDJFCB OUTDCB
         MVC   JFCB+44(8),PARM33M
         OI    JFCB+86,X'01'           Mark 'MEMBER in PDS'
         OPEN  (OUTDCB),TYPE=J
         XR    R2,R2
         OI    SW02,$OPEN              Mark opened *RETRY ROUT* @911218
LOAD     DS    0H
         CH    R2,=H'3999'             Maximum of lines reached?
         BE    LOAD9                   Yes: stop loading
         GET   OUTDCB
         LR    R4,R1
         MVC   0(80,R12),0(R4)         Move record into workspace
         LA    R12,80(,R12)            Next entry in workspace
         LA    R2,1(,R2)               Count record
         B     LOAD
LOAD9    DS    0H
         CLOSE (OUTDCB)                Close input and ...
         FREEPOOL OUTDCB               free the buffers
         NI    SW02,255-$OPEN          OUTDCB closed now        @911218
         ST    R2,REG2                 Save counter
         B     CHANGE                  Enter subcommand mode
UPDERR   MVC   MSG99+4(60),MSG05       Move message into WTO.
         LA    R1,MSG99
         WTO   MF=(E,(1))              Msg: EDT010E member not present
         B     TSTVSST                 Prompt for a new command
TSTVSNEW DS    0H
         L     R12,SAVEGETM            Start of workspace
         XR    R2,R2                   Clear count register
TSTVSINP DS    0H
         XC    ECB1,ECB1
         MVC   CARD(80),BLANKS
         WTOR  'EDT003A Enter data, ''SAVE'' OR ''SUBMIT''',           X
               REPLY,72,ECB1,ROUTCDE=(2,3)
BBB      WAIT  ECB=ECB1
         OC    REPLY(72),BLANKS        Convert to capitals
         CLC   REPLY(4),=C'SAVE'       Save workspace in member?
         BE    TSTVSCLS                Yes: good, branch
         CLC   REPLY(6),=C'SUBMIT'     SUBMIT ?
         BE    TSTVSCLS                Yes: SAVE and SUBMIT
         OI    SW01,$CHANGED           Flag changes made
         TM    PARMSW,NBRS             Numbered data?
         BNO   NOSEQ                   No: skip
TSTVSSEQ XC    ECB1,ECB1
         WTOR  'EDT004A Enter sequence number ',                       X
               REPLY2,8,ECB1,ROUTCDE=(2,3)
CCC      WAIT  ECB=ECB1
         LA    R7,8                    Maximum length of reply
         XR    R6,R6                   Clear register 6
         LA    R8,REPLY2               Reply address into register 8
SEQ002   DS    0H
         CLI   0(R8),X'40'             Blank found ?
         BE    SEQ007
         CLI   0(R8),X'F0'             Numeric test
         BL    SEQ004
         CLI   0(R8),X'F9'             Numeric test
         BH    SEQ004
         LA    R8,1(,R8)               Load next character
         LA    R6,1(,R6)               Length = length+1
         BCT   R7,SEQ002
         B     SEQ007
SEQ004   DS    0H                      Msg EDT008E
         LA    R1,MSG99
         MVC   MSG99+4(60),MSG04       Msg: sequence number not numeric
         WTO   MF=(E,(1))              Inform operator/user
SEQ005   DS    0H
         MVC   REPLY2(8),BLANKS        Clear reply area
         B     TSTVSSEQ                Ask for new cardnumber (73-80)
SEQ007   DS    0H
         LTR   R6,R6                   No length?
         BZ    SEQ005                  Yes: repeat EDT004A
         BCTR  R6,0                    Minus 1 for execute
         EX    R6,PACK2                Pack card number
         UNPK  REPLY2(8),DWB           Unpack back
         OI    REPLY2+7,X'F0'          and clear sign
NOSEQ    MVC   0(80,R12),CARD          Move record into workspace
         TM    PARMSW,UPDT             TSTVSCOM has update flag set?
         BNO   TSTVSI9                 No: ask next data record
         B     CHANGE                  Prompt for new subcommand
TSTVSI9  DS    0H
         LA    R2,1(,R2)               Number of lines in workspace
         LA    R12,80(,R12)            Next entry in workspace
         B     TSTVSINP                Prompt for new record
TSTVSCLS DS    0H
         MVC   COMMAND,REPLY           Save command 'SAVE' or 'SUBMIT'
         BAL   R14,SAVE
         CLC   =C'SAVE',COMMAND        Save member requested ?  @930729
         BE    TSTVSST                 Yes: prompt for command
         BAL   R14,SUB                 Else: submit first
         B     TSTVSST
TSTVSAL  DS    0H
         CALL  TSTVSALL,(PARM)         Allocate the dataset
         B     TSTVSST
TSTVSREN DS    0H                      Rename a dataset         @930729
         OI    PARMSW,$RENDS           Tell TSTVSALL, that a    @930729
*                                      rename should occur      @930729
         CALL  TSTVSALL,(PARM)         Rename the dataset       @930729
         NI    PARMSW,255-$RENDS       Reset flag               @930729
         B     TSTVSST                                          @930729
TSTVSDEL DS    0H                      Delete or Rename member
         B     DEL
TSTVSEOJ DS    0H                      Pickup workspace
         L     R12,SAVEGETM            Start of workspace
         ESTAE 0                       Kill ESTAE routine
         OI    PARMSW,$UNALL           TSTVSALL does only an unalloc
         CALL  TSTVSALL,(PARM)         Invoke TSTVSALL
         FREEMAIN RU,LV=320000,A=(R12) Get rid of the workspace
TSTVSEO2 DS    0H
         LA    R2,MSGID
         DOM   MSG=(2)                 delete the start msg     @930729
         L     R13,4(,R13)             Pickup callers save area
         RETURN (14,12),RC=0           BACK TO OS
PACK1    PACK  DWB,0(1,R3)             << executed >>
PACK2    PACK  DWB,REPLY2(1)           << executed >>
         TITLE 'U P D A T E   R O U T I N E'
CHANGE   DS    0H
         OI    SW02,$SUBMODE           We are in SUBCOMMAND mode
         NI    SW01,X'FF'-$LINEDEL     Reset switch DELETE requested
         XC    ECB1,ECB1
         MVC   REPLY4(60),BLANKS
         WTOR  'EDT005A Enter subcommand or ''HELP''',REPLY4,60,       X
               ECB1,ROUTCDE=(2,3)
DDD      WAIT  ECB=ECB1
         OC    REPLY4(60),BLANKS       Translate to capitals
         CLI   REPLY4,C' '             Nothing replied?
         BE    CHANGE                  Yes: ask again for subcommand
         CLC   REPLY4(4),=C'END '      End of subcommand mode?
         BE    CHEND                   Yes: leave and goto command mode
         CLC   REPLY4(5),=C'SAVE '     Save workspace into member?
         BNE   CHEOJ                   No: test other subcommands
         BAL   R14,SAVE                Invoke SAVE routine
         B     CHEND3                  Terminate subcommand mode
CHEOJ    DS    0H
         CLC   REPLY4(3),=C'EOJ'       End of job?   ?
         BNE   CHSUB                   No: test other subcommands
         OI    SW01,$EOJ               Set EOJ flag
         B     CHEND                   Carry on
CHSUB    DS    0H
         CLC   REPLY4(6),=C'SUBMIT'    SUBMIT the workspace?
         BNE   CHADD                   No: test other subcommands
         OI    SW01,$WKSUBM            Indicate submit from workspace
         BAL   R14,SUB                 Invoke SUBMIT routine
         B     CHANGE                  Prompt for new subcommand
CHADD    DS    0H
         CLC   REPLY4(4),=C'ADD '      Append data in workspace?
         BNE   CHVFY                   No: test other subcommands
         LR    R1,R2                   # lines in workspace
         MH    R1,=H'80'               * record length
         L     R12,SAVEGETM            Start address workspace
         LA    R12,0(R1,R12)           Point after last record
         NI    PARMSW,X'FF'-UPDT       Simulate new member
         B     TSTVSINP                Prompt for data.
CHVFY    CLI   REPLY4,C'V'             Subcommand 'V ON' or 'V OFF'?
         BE    VFY                     Yes: execute
         CLC   REPLY4(4),=C'HELP'      HELP message EDT014A
         BNE   CHNG
         LA    R1,MSG99
         MVC   MSG99+4(60),MSG09
         WTO   MF=(E,(1))
         LA    R1,MSG99
         MVC   MSG99+4(60),MSG10       Write HELP lines
         WTO   MF=(E,(1))
         LA    R1,MSG99
         MVC   MSG99+4(60),MSG11       Write more HELP lines
         WTO   MF=(E,(1))
         MVC   MSG99+4(60),MSG11A
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11B
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11C
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11D
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11E
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11F
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11G
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11H
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11I
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11J
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11K
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11L
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11M
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11N
         WTO   MF=(E,MSG99)
         MVC   MSG99+4(60),MSG11O      Last HELP line
         WTO   MF=(E,MSG99)
         B     CHANGE                  Prompt for new subcommand
CHNG     CLC   REPLY4(4),=C'LIST'      List workspace? (first 55 pos.)
         BNE   CHNGL                   No: test other subcommands
         NI    SW01,255-$XLST          Indicate normal LIST (55 pos.)
         BAL   R14,LIST                Invoke LIST routine
         B     CHANGE                  Prompt for new subcommand
CHNGL    CLC   REPLY4(2),=C'L '        List workspace? (alias of LIST)
         BNE   CHNGXLST                No: test other subcommands
         NI    SW01,255-$XLST          Indicate normal LIST (55 pos.)
         BAL   R14,LIST                Invoke LIST routine
         B     CHANGE                  Prompt for new subcommand
CHNGXLST CLC   REPLY4(4),=C'XLST'      List workspace? (entire lines)
         BNE   CHNGNUM                 No: test other subcommand
         OI    SW01,$XLST              Indicate extended LIST
         BAL   R14,LIST                Invoke LIST routine
         B     CHANGE                  Prompt for new subcommand
CHNGNUM  CLC   REPLY4(5),=C'RENUM'     Sequence numbers in cols 73-80?
         BE    RENUM                   Yes: renumber those numbers
         CLC   REPLY4(5),=C'UNNUM'     Remove sequence numbers?
         BE    UNNUM                   Yes: remove those numbers
         CLI   REPLY4,C'C'             Update character strings?
         BNE   CHINS                   No: test other subcommands
         CLC   =C'ALL',REPLY4+2        Subcommand 'C ALL'?
         BNE   CHSINGLE                No: Update 1 line
         LA    R4,1                    Start with line=1 (C ALL)
         L     R12,SAVEGETM            Start address workspace
         OI    SW02,$CHALL             Indicate 'C ALL'         @911218
         OI    SW02,$NOMATCH           Default no match found   @911218
*--------------------------------------------------------------------*
* Flag '$NOMATCH' will be reset if the first character string is
* replaced.
*---------------------------------------------------------------------*
CHALL1   DS    0H                                               @911218
         CLC   0(2,R12),=X'FFFF'       Beyond last record?      @911218
         BE    CHALL9                  Yes: test return code    @911218
         CVD   R4,DWB                  Convert line# to decimal @911218
         UNPK  REPLY4+2(3),DWB         Make zoned               @911218
         OI    REPLY4+4,X'F0'          Remove sign              @911218
         BAL   R14,UPDIPL              Update inplace routine   @911218
         LA    R4,1(,R4)               Next line number         @911218
         LA    R12,80(,R12)            Next record in workspace @911218
         B     CHALL1                  Loop until all lines done@911218
         MVC   MSG99+4(60),MSG12                                @911218
CHALL9   DS    0H                                               @911218
         TM    SW02,$NOMATCH           No lines changed?        @911218
         BNO   CHANGE                  No: carry, Yes: give msg @911218
         MVC   MSG99+4(60),MSG12       Msg: 'Text not found'    @911218
         LA    R1,MSG99                                         @911218
         WTO   MF=(E,(1))              Msg: 'Text not found'    @911218
         B     CHANGE                  Prompt for new subcommand@911218
CHSINGLE DS    0H
         NI    SW02,255-$CHALL         No 'C ALL' subcommand    @911218
         BAL   R14,UPDIPL              Invoke Update inplace
         B     CHANGE                  Prompt for new subcommand
CHINS    DS    0H
         CLI   REPLY4,C'I'             Subcommand 'I' (insert)?
         BNE   CHREPEAT                No: test other subcommands
         B     INSERT                  Insert/Delete/Repeat routine
CHREPEAT DS    0H
         CLC   REPLY4(2),=C'R '        Repeat the line?
         BNE   CHDEL                   No: test other subcommands
         B     INSERT                  Insert the repeated line
CHDEL    DS    0H
         CLI   REPLY4,C'D'             Delete line or line-range?
         BNE   CHPRT                   No: test other subcommands
         OI    SW01,$LINEDEL           Flag delete requested
         B     INSERT                  Insert/Delete/Repeate routine
CHPRT    DS    0H
         CLC   REPLY4(5),=C'PRINT'     Print DATASET ?
         BNE   CHFIND
         BAL   R14,PRT                 Invoke routine PRINT
         B     CHANGE                  Prompt for new subcommand
CHFIND   DS    0H
         CLC   REPLY4(2),=C'F '        'F' (Find) subcommand?
         BNE   NUM                     No: then it's only a line number
         BAL   R14,FIND                Invoke FIND routine
         B     CHANGE
NUM      DS    0H                      Only line number entered
         LA    R1,REPLY4               Offset for line number
         BAL   R14,LINENUM             Get line number
         LTR   R15,R15                 Line found?
         BNZ   CHANGE                  No: next subcommand
         L     R5,LINENR1              Obtained line number
         BCTR  R5,0                    minus 1
         MH    R5,=H'80'               * record length
         L     R12,SAVEGETM            Start of workspace
         ALR   R12,R5                  point to right line
         MVC   MSG99+4(60),0(R12)      Move line into message
         LA    R1,MSG99                Display line ..
         WTO   MF=(E,(1))                             upon console
         B     TSTVSINP                Replace line
RENUM    DS    0H
         L     R12,SAVEGETM            Start of workspace
         ZAP   DWB,=PL2'10'            1st line number
RENUM2   CLC   0(2,12),=X'FFFF'        End of data?
         BE    WTONUM                 Yes: all renumbered issue EDT013A
         UNPK  72(8,R12),DWB           Move linenumber to
         OI    79(R12),X'F0'                             cols 73-80
         AP    DWB,=PL2'10'            Increment
         LA    R12,80(,R12)            Next record
         B     RENUM2                  Loop until all done
UNNUM    DS    0H
         L     R12,SAVEGETM            Start of workspace
UNNUM2   DS    0H
         CLC   0(2,R12),=X'FFFF'       End of data?
         BE    CHANGE                  Yes: ask for next subcommand
         MVC   72(8,R12),BLANKS        Blank columns 73-80
         LA    R12,80(,R12)            Next record
         B     UNNUM2
WTONUM   DS    0H
         LA    R1,MSG99
         MVC   MSG99+4(60),MSG08
         WTO   MF=(E,(1))
         B     CHANGE                  Prompt for new subcommand
VFY      DS    0H                      Subcommand 'V ON' or 'V OFF'
*        list or don't list changed line after subcommand 'C'
         CLC   REPLY4+2(3),=C'ON '     List after subcommand 'C'?
         BE    VFY2                    Yes: good
         MVC   REPLY4+2(3),=C'OFF'     'V OFF' is the default
         NI    SW01,X'FF'-$VFY         Do not list after 'C' subcommand
         B     VFY3
VFY2     OI    SW01,$VFY               Flag list ID on
VFY3     DS    0H                      Issue msg EDT022I
         MVC   ONOFF(3),REPLY4+2       Move operand of subcommand 'V'
         MVC   MSG99+4(60),MSG18       Msg 'verification turned ON/OFF'
         WTO   MF=(E,MSG99)            Inform operator/user
         B     CHANGE
CHEND    DS    0H                      Process 'END'
         TM    SW01,$CHANGED           Changes outstanding?
         BNO   CHEND3                  No: continue with END
CHEND2   XC    ECB1,ECB1               Clear Event Control Block
         MVC   REPLY8,BLANKS           Clear reply area
         WTOR  'EDT025A *WARNING* nothing saved, Enter ''SAVE'' or ''ENX
               D''',REPLY8,4,ECB1,ROUTCDE=(2,3)
III      WAIT  ECB=ECB1                Wait for reply
         CLC   REPLY8(4),=C'END '      Nothing save forced?
         BE    CHEND3                  Yes: cancel updates and END
         CLC   REPLY8(4),=C'SAVE'      SAVE replied?
         BNE   CHEND2                  No: re-issue EDT025A
         BAL   R14,SAVE                Save the member
CHEND3   DS    0H
         NI    SW01,255-$CHANGED       Changes made switch off
         NI    SW02,255-$SUBMODE       Reset subcommand mode
         TM    SW01,$EOJ               Subcommand 'EOJ'?
         BO    TSTVSEOJ                Yes: terminate TSTVS
         B     TSTVSST                 Prompt for new command
         TITLE 'List and XLST routine'
LIST     DS    0H
         STM   R14,R12,SAVER           Save registers
         L     R12,SAVEGETM            Start address of workspace
         LA    R1,REPLY4+5             Point to line number if any
         CLC   REPLY4(2),=C'L '        Alias of 'LIST'?
         BNE   LIST1                   No: 'LIST' or 'XLST'
         CLI   REPLY4+2,X'40'          No line number in reply?
         BE    LIST2                   Yes: list entire data
         LA    R1,REPLY4+2             'L' command (alias of 'LIST')
         B     LIST1A                  Carry
LIST1    DS    0H
         CLI   REPLY4+5,C' '           NO LINE NUMBERS ??
         BE    LIST2                   LIST ENTIRE DATASET
LIST1A   DS    0H
         BAL   R14,LINENUM             Examine line number operands
         LTR   R15,R15                 Line numbers ok?
         BNZ   LISTEND                 No: end of LIST routine
         B     LIST4
LIST2    DS    0H
         ZAP   PACKFLD,=PL3'0'         << LIST entire workspace >>
         ZAP   WTOCNT,=PL2'0'          Counter for msg EDT017A
         LH    R3,=H'3999'             Maximum # lines in workspace
         MH    R3,=H'80'               * record length
         LA    R3,0(R3,R12)            Last line to display
LIST3    DS    0H
         CLC   0(2,R12),=X'FFFF'       After last record in workspace?
         BE    LISTEND
         CR    R12,R3                  Out of line range?
         BH    LISTEND                 Yes: end of LIST routine
         AP    PACKFLD,=PL1'1'
         CP    WTOCNT,=P'16'           16 lines displayed?
         BL    LIST3#                  No: display next line
         ZAP   WTOCNT,=PL2'0'          Reset counter
LISTCONT DS    0H
         MVC   REPLY6,BLANKS           Clear reply area
         XC    ECB1,ECB1               Clear Event Control Block
         WTOR  'EDT017A Should TSTVS continue this function? Reply Y OrX
                N ',REPLY6,3,ECB1,ROUTCDE=(2,3)
FFF      WAIT  ECB=ECB1
         OC    REPLY6,BLANKS           Xlate to capitals
         CLC   REPLY6(2),=C'Y '        Continue?
         BE    LIST3#                  Yes: list next 16 lines
         CLC   REPLY6(2),=C'N '        Terminate?
         BNE   LISTCONT                No: re-issue WTOR
         B     LISTWTO2                Yes: give msg EDT018I
LIST3#   DS    0H
         TM    SW01,$XLST              Extended LIST?
         BNZ   LIST3B                  Yes: do that
LIST3A   DS    0H
         UNPK  MSG99+4(4),PACKFLD      Line number befor line in msg
         OI    MSG99+7,X'F0'           Clear sign
         MVI   MSG99+8,X'40'
         MVC   MSG99+9(55),0(R12)      1st 55 positions upon console
         LA    R1,MSG99
         WTO   MF=(E,(1))              Issue message
         AP    WTOCNT,=PL1'1'
         LA    R12,80(,R12)            Next record
         B     LIST3
LIST3B   DS    0H                      XLST subcommand
         MVC   MSG99+4(60),BLANKS      Blank message field
         UNPK  MSG99+4(4),PACKFLD      Line number before line
         OI    MSG99+7,X'F0'           Clear sign
         MVC   MSG99+9(7),=C'01...40'  Columns 01-40
         MVC   MSG99+17(40),0(R12)     1st 40 positions upon console
         LA    R1,MSG99
         WTO   MF=(E,(1))              Issue message
         AP    WTOCNT,=PL1'1'
         MVC   MSG99+4(4),=C'....'     Start 2nd part of line
         MVC   MSG99+9(7),=C'41...80'  Columns 41-80
         MVC   MSG99+17(40),40(R12)    2nd 40 positions upon console
         LA    R1,MSG99
         WTO   MF=(E,(1))
         AP    WTOCNT,=PL1'1'
         LA    R12,80(,R12)            Next record
         B     LIST3
LIST4    DS    0H                      << LIST line range >>
         L     R2,LINENR1              Start line
         CVD   R2,DWB                  Make decimal
         ZAP   PACKFLD(3),DWB
         SP    PACKFLD,=P'1'           Minus 1
         BCTR  R2,0                    Decrease with 1
         MH    R2,=H'80'               * record length
         LA    R12,0(R12,R2)           Point to listed line
         L     R3,LINENR2              Second line number
         BCTR  R3,0                    Decrease
         MH    R3,=H'80'               * record length
         L     R1,SAVEGETM             Start address workspace
         LA    R3,0(R1,R3)             Last line to display
         ZAP   WTOCNT,=PL2'0'
         B     LIST3
LISTWTO2 DS    0H                      Msg EDT018I *****
         MVC   MSG99+4(60),MSG14       Msg: function terminated ...
         LA    R1,MSG99                     by operator
         WTO   MF=(E,(1))
LISTEND  DS    0H
         LM    R14,R12,SAVER           Restore the registers
         BR    R14                     Return
         TITLE 'Print routine'
*---------------------------------------------------------------------*
*        Routine to PRINT the workspace for checking the              *
*        changed made by the operator/user.                           *
*        The PRINT dataset is a spin-off SYSOUT dataset               *
*        This routine is only supported in MVS or successors.         *
*------------------------------------------ (C)-2022 Skybird systems -*
         SPACE 2
PRT      DS    0H                      << PRINT routine >>
         STM   R14,R12,SAVER           Save the registers
         XC    SYSINT(4),SYSINT        Clear INTRDR specification
         TM    SW02,$OPER              Issued by a primary subsystem?
         BNZ   PRTWTO3                 Yes: print not possible
         TRT   REPLY4+6(1),CLSTAB      Test validity SYSOUT class
         BNZ   PRT001                  Take default in not valid
         MVC   SYSCLS(1),REPLY4+6      Move gotten SYSOUT class
PRT001   DS    0H
         LA    R1,BLKPTR               Prepare DYNAMIC allocation
         SVC   99                      Allocate
         MVC   MSG19CLS,SYSCLS         SYSOUT class into message
         MVI   SYSCLS,C'C'             MOVE DEFAULT SYSOUT CLASS
         LTR   R15,R15                 Allocation successful?
         BNZ   PRTWTO2                 No: inform user
         MVC   PRTDCB+DCBDDNAM-IHADCB(8),ALCDDNAM
*                                      Generated DDNAME
         OPEN  (PRTDCB,(OUTPUT))
         MVC   HEADMEM,JFCB+44         Move member name into header
         L     R12,SAVEGETM            Start of workspace
         ZAP   PACKFLD,=PL1'0'         Initialize line counter
         ZAP   LINECNT,=P'99'          Force making headers
         ZAP   PAGECNT,=P'0'           Page counter
PRT01    DS    0H
         CLC   0(2,R12),=X'FFFF'       Beyond last record in workspace?
         BE    PRT02                   Yes: PRINT is complete
         CP    LINECNT,=P'54'          Bottom of page reached?
         BL    PRT01A                  No: print line
         AP    PAGECNT,=P'1'           Increase page counter
         UNPK  HEADCNT,PAGECNT         Unpack the result
         OI    HEADCNT+2,X'F0'         Clear sign
         PUT   PRTDCB,HEADLINE         Write line
         MVC   LINE,LINE-1             Clear line
         PUT   PRTDCB,LINE             Write blank line
         ZAP   LINECNT,=P'2'           Initialize line counter
PRT01A   DS    0H
         AP    PACKFLD,=PL1'1'         Increase line counter
         MVC   LINE,LINE-1             Blank line
         UNPK  LINE+1(4),PACKFLD       TSTVS line number
         OI    LINE+4,X'F0'            Make absolute
         MVC   LINE+10(80),0(R12)      Record in print line
         PUT   PRTDCB,LINE             Write line
         AP    LINECNT,=P'1'           Increase line counter
         LA    R12,80(,R12)            Next record
         B     PRT01                   Print all lines until EOF
PRT02    DS    0H
         CLOSE PRTDCB                  CLOSE and unALLOCATE
         FREEPOOL PRTDCB               And free the buffers
         UNPK  MSG19#L,PACKFLD         Number of lines
         OI    MSG19#L+3,X'F0'
         MVC   MSG99+4(60),MSG19       Msg: 'xxx lines printed ...'
         WTO   MF=(E,MSG99)            Inform oparator/user
         B     PRTEND            E N D   O F   R O U T I N E
PRTWTO3  DS    0H                      Issue message EDT028E
         LA    R1,MSG99
         MVC   MSG99+4(60),MSG24       Msg: not possible if subsystem
         WTO   MF=(E,(1))              Inform operator/user
         B     PRTEND
PRTWTO2  DS    0H                      Issue message EDT019E
         SYCONVHX IN=ERROR,OUT=ERRORBC,L=2
         SYCONVHX IN=INFO,OUT=INFOBC,L=2
         LA    R1,MSG99                Dynamic allocation failed
         MVC   MSG99+4(60),MSG15
         WTO   MF=(E,(1))              Inform operator/user
PRTEND   DS    0H
         LA    R2,INTKEY               Repair INTRDR specification
         LA    R2,0(,R2)               Clear high order byte
         ST    R2,SYSINT
         LM    R14,R12,SAVER           Restore the registers
         BR    R14                     Return to caller
         TITLE 'Delete or rename members in PDS directory'
DEL      DS    0H                      If $RENAME = on then rename
         MVC   NOT,=C'   '             ) else delete
         MVC   RENDEL,=CL8' DELETED'   Default verb in message
         MVC   RTRNTEXT,BLANKS
         OPEN  (PDSDCB,(UPDAT))        Open BPAM dcb
         TM    PARMSW,$RENAME          Rename member requested?
         BZ    DEL2                    No: delete member
         STOW  PDSDCB,PARM33M,C        Else: rename member
         MVC   RENDEL,=CL8' RENAMED'   Change verb in message
         NI    PARMSW,255-$RENAME      Reset rename flag
         B     DEL4                    Test completion of STOW
DEL2     DS    0H
         STOW  PDSDCB,PARM33M,D        Delete member
DEL4     DS    0H
         LTR   R15,R15                 STOW ok?
         BZ    DEL6                    Yes: Delete executed
         MVC   NOT,=C'not'             Else: display error message
         MVC   RTRNTEXT(12),=C' Returncode '
         CVD   R15,DWB
         UNPK  RTRNTEXT+12(4),DWB      Return code
         OI    RTRNTEXT+15,X'F0'                  into message
DEL6     DS    0H
         CLOSE (PDSDCB)                Close directories PDS
         MVC   WTOMEM,PARM33M
         LA    R1,MSG99
         MVC   MSG99+4(60),MSG06       Msg: EDT011I
         WTO   MF=(E,(1))              Write 'Member deleted' message
         B     TSTVSST                 Prompt for new command
         TITLE 'Read directories from partitioned data set'
RDDIR    DS    0H
         STM   R14,R12,SAVER           Save registers
         NI    SW01,X'FF'-$MEMFND      Reset member found flag
         CLC   PARM33R(7),=C'PDSLIST'  List directories of PDS?
         BE    PDSL03                  Yes: list members of PDS
         OPEN  (PDSDCB)
         MVC   BLDLM,PARM33M           Move membername
         BLDL  PDSDCB,BLDLLIST         BLDL entry supplied name
         LTR   R15,R15                 Is member present?
         BNZ   PDSL01                  No: Close
         OI    SW01,$MEMFND            Flag member is present
PDSL01   DS    0H
         CLOSE PDSDCB
         B     PDSL99                  End of BLDL routine
PDSL03   DS    0H
         MVC   MSG13(60),BLANKS
         RDJFCB OUTDCB                 Obtain Job File Control Block
         OPEN  PDSDCB
         MVC   MSG13(8),=C'EDT016I '   Move message ID
         MVC   MSG13+8(44),JFCB        Data set name into message
         LA    R1,MSG99
         MVC   MSG99+4(60),MSG13       Msg: header of PDSLIST
         WTO   MF=(E,(1))              Write header
         LA    R7,16                   Display max 16 lines
PDSL05   DS    0H
         READ  DECB,SF,PDSDCB,MEMBAREA,256
         CHECK DECB
         LA    R4,MEMBAREA             Directory block
         LH    R3,0(,R4)               # of bytes
         SH    R3,=H'2'                Subtract count
         LA    R4,2(,R4)               Point to first member
PDSL07   DS    0H
         LTR   R3,R3                   Test if count = zero
         BZ    PDSL05                  Yes: last member in dir. blk.
         CLI   0(R4),X'FF'             Last member?
         BE    PDSL15                  Yes: close PDS
         XR    R1,R1                   Clear register           @930726
         IC    R1,PARM33KL             Keylength                @930726
         LTR   R1,R1                   No length ?              @930726
         BZ    PDSL08                  Yes: Branch              @930726
         EX    R1,PDSLCMP              Test with key            @930726
         BL    PDSL13                  Next member if not reached
PDSL08   DS    0H                                               @930726
         BCT   R7,PDSL11
         LA    R7,16                   Max lines to prevent WTO
*                                      Buffer shortage.
PDSL09   DS    0H                                               @930726
         MVC   REPLY6,BLANKS           Clear reply area
         XC    ECB1,ECB1               Clear Event Control Block
         WTOR  'EDT017A Should TSTVS continue this function? Reply Y OrX
                N ',REPLY6,3,ECB1,ROUTCDE=(2,3)
GGG      WAIT  ECB=ECB1
         OC    REPLY6,BLANKS           Xlate to uppercase
         CLC   REPLY6(2),=C'Y '        Continue function?
         BE    PDSL11                  Yes: list next 16 lines
         CLC   REPLY6(2),=C'N '        Terminate PDSLIST?
         BNE   PDSL09                  No: re-issue WTOR
         MVC   MSG99+4(60),MSG14       Msg: function terminated
         LA    R1,MSG99                Give msg EDT018I
         WTO   MF=(E,(1))              Inform operator/user
         B     PDSL15                  Terminate PDSLIST
PDSL11   DS    0H
         MVC   MSG13(60),BLANKS        Detail line of PDSLIST
         MVC   MSG13+8(8),0(R4)        Move member name into message
         LA    R1,MSG99
         MVC   MSG99+4(60),MSG13       Member line PDSLIST
         WTO   MF=(E,(1))              Inform operator/user
PDSL13   DS    0H
         SR    R5,R5                   Clear register 5
         SR    R6,R6                   Clear register 6
         IC    R5,11(R4)               Number of additional halfwords
         IC    R6,=X'1F'               Maximum of additional halfwords
         NR    R5,R6                   Test if add halfwords not >31
         AR    R5,R5                   Mulitply by 2 because halfwords
         LA    R4,12(R5,R4)            Next member entry in dir. blk.
         SR    R3,R5                   -/- length of addition halfw.
         SH    R3,=H'12'               -/- length of base entry
         B     PDSL07                  Return
PDSL15   DS    0H
         CLOSE PDSDCB
PDSL99   DS    0H
         LM    R14,R12,SAVER           Restore the registers
         BR    R14                     Return
PDSLCMP  CLC   0(0,R4),PARM33KY        << executed >>
         TITLE 'Insert, Delete or Repeat lines'
INSERT   DS    0H
         CLC   REPLY4+2(3),=C'   '     Line number present in reply?
         BNE   IN002                   Yes: do a numeric test
         XC    LINENR1,LINENR1         Else: insert before first line
         B     INOK
IN002    DS    0H                      Numeric test
         LA    R1,REPLY4+2             Load operand 'line number'
         BAL   R14,LINENUM             Obtain line number
         LTR   R15,R15                 Error?
         BNZ   CHANGE                  Yes: end of routine
INOK     L     R5,LINENR1              CONVERT LINE-NO TO BIN
         TM    SW01,$LINEDEL           Delete the line?
         BNO   IN001                   No: carry on
         LTR   R5,R5                   Zero? (line 0 could not deleted)
         BZ    INERR                   Yes: give msg EDT006E
         CLC   LINENR1,LINENR2         Second line number?
         BE    IN000A                  No: branch
         ST    R3,DELR3                Save register 3 for later use
         L     R3,LINENR2              Obtain second line number
         SLR   R3,R5                   2nd linenr - 1st linenr
         LA    R3,1(,R3)               +/+ 1 for BCT loop
         B     DEL001                  Goto DELETE routine
IN000A   DS    0H                      Only first line number
         ST    R3,DELR3                Save register 3
         LA    R3,1                    1 for BCT
         B     DEL001                  Goto DELETE routine
IN001    DS    0H
         LR    R8,R2                   Save count register
         LA    R8,1(,R8)
         CH    R8,=H'3999'             Test on maximum number of lines
         BH    INERR2                  Yes: exceeds maximum lines
         CLC   REPLY4(2),=C'R '        Subcommand 'R' (repeat)?
         BNE   IN001A                  No: execute Insert
         OI    SW01,$CHANGED           Mark changes made
         LTR   R5,R5                   Line 0 given or line omitted?
         BZ    IN001A                  Yes: repeat line 1.
         BCTR  R5,0                    Else: repeat specified line
IN001A   DS    0H
         MH    R5,=H'80'               Multiply with record length
         LR    R8,R5                   Copy into register 8
         L     R12,SAVEGETM            Start of workspace
         LA    R12,0(R12,R5)           Shift lines after inserted lines
         MVC   HELP1(80),0(R12)        THE LINE TO BE INSERTED
IN003    DS    0H
         CLC   HELP1(2),=X'FFFF'       Last line in workspace?
         BE    INEND                   Yes: insert is finished
         LA    R12,80(,R12)            Next record in workspace
         MVC   HELP2(80),0(R12)        Save line
         MVC   0(80,R12),HELP1         Move lines to
         MVC   HELP1,HELP2             end of workspace
         B     IN003
INERR    DS    0H                      Line number invalid
         LA    R1,MSG99
         MVC   MSG99+4(60),MSG02       Msg EDT006E, line number invalid
         WTO   MF=(E,(1))              Inform operator/user
         B     CHANGE                  Try again
INERR2   DS    0H
         LA    R1,MSG99                Too many lines in workspace
         MVC   MSG99+4(60),MSG07       Message EDT012E
         WTO   MF=(E,(1))
         B     CHANGE                  Advice split member
*                                      into more members
INEND    DS    0H
         LA    R2,1(,R2)               Increase counter?
         CLC   REPLY4(2),=C'R '        Subcommand 'R' (repeat)?
         BE    CHANGE                  Yes: Prompt for new subcommand
         L     R12,SAVEGETM            Pickup startaddress workspace
         LA    R12,0(R12,R8)           Right offset
         B     TSTVSINP                Ask for data
DEL001   DS    0H                      Delete line from workspace
         BCTR  R5,0
         MH    R5,=H'80'               Register 5 from INSERT
         L     R12,SAVEGETM            Start of workspace
         LA    R12,0(R12,R5)           Point to right line
         ST    R12,DELR12              Save for 2nd use
DEL001A  DS    0H
         MVI   DEL003+1,X'00'          Change BC 15 into BC 0
         L     R12,DELR12
DEL002   DS    0H
         CLC   0(2,R12),=X'FFFF'       End  of file?
         BE    DEL005                  Yes: line completed
         OI    SW01,$CHANGED           Mark changes made
DEL003   DS    0H
         BC    0,DEL004
         OI    DEL003+1,X'F0'          Change BC 0 (NOP) in BC 15 (B)
         BCTR  R2,0                    Decrease count
DEL004   DS    0H
         MVC   0(80,R12),80(R12)
         LA    R12,80(,R12)            Next record
         B     DEL002
DEL005   DS    0H                      Next line
         BCT   R3,DEL001A              Next line to delete
         L     R3,DELR3                Restore register 3
         B     CHANGE
DELR3    DS    F                       Save field register 3
DELR12   DS    F                       Save field register 12
         TITLE 'Change character strings'
UPDIPL   DS    0H
*
*        Syntax: C xxx,string1$string2$
*
*        Register usage:
*
*        R2        Register for workspace
*        R3        Workregister
*        R4        BCT register
*        R5        Length char. string
*        R6        Address char string
*        R7        Workregister.
*                  all registers are saved
*
         STM   R14,R12,SAVER           Save registers
         CLC   REPLY4+2(3),=X'F0F0F0'  Test if line number is numeric
         BNH   UPDWTO1                 Give error message EDT006E
         OI    SW01,$C#CMD             Mark 'C' Subcommand
         LA    R1,REPLY4+2             Parameter
         BAL   R14,LINENUM             Obtain line number
         NI    SW01,X'FF'-$C#CMD
         LTR   R15,R15                 Error?
         BNZ   UPDBK                   Yes: end of routine
         L     R2,SAVEGETM             Restore workspace address
         L     R3,LINENR1              Obtain line number
         BCTR  R3,0                    Decrease with 1
         MH    R3,=H'80'               * record length
         LA    R2,0(R2,R3)             Right line found
         ST    R2,SAVELST              Save it's address
         LA    R4,25                   Search max. 25 times
         XR    R5,R5                   Count string length
         L     R6,OFFSET            Offset in reply 4 from LINENUM RT
         LR    R8,R6
UPD01A   DS    0H
         CLI   0(R6),C'$'              End of character string?
         BE    UPD01B     (or UPD01C)  Yes: branch
         LA    R5,1(,R5)               # bytes length
         LA    R6,1(,R6)               Test next position
         BCT   R4,UPD01A               Try again
         B     UPDWTO2                 Msg EDT015E String(s) not found
UPD01B   DS    0H
         MVC   UPD01A+6(2),=S(UPD01C)  Move different branch addr.
         LR    R7,R5                   Save length old string
         LA    R4,25                   Search max 25 times.
         LA    R6,1(,R6)               New character string
         ST    R6,SAVER6
         XR    R5,R5                   Clear register 5
         B     UPD01A                  Test length of new string
UPD01C   DS    0H
         ST    R7,LENGTH1              Save length old character str.
         ST    R5,LENGTH2              Save length new character str.
         LTR   R7,R7                   Is length old char. str. 0?
         BZ    UPD02A                  Yes: branch
         LA    R4,79                   Search max 79 times
         BCTR  R7,0                    Decrease for execute
         SPACE
* Search old char. string and replace with new char. string
         SPACE
UPD2     DS    0H
         EX    R7,COMPARE              Test if string is present
         BE    UPD02A                  Replace into new string
         LA    R2,1(,R2)               Next character
         BCT   R4,UPD2                 Try again
         B     UPDWTO2                 Msg: EDT015E Strings not found
COMPARE  CLC   0(0,R2),0(R8)           << executed >>
UPD02A   DS    0H
         ST    R2,SAVER2               Save position in line
         L     R7,LENGTH1              Length old string
         L     R5,LENGTH2              Length new string
         SR    R7,R5                   Length1-length2
         C     R7,=F'0'                Equal?
         BE    UPD3                    Yes: replace immediately
         BH    UPD02B                  Old string is longer
         L     R3,SAVER2               Restore position in line
         A     R3,LENGTH1              + length of old string
         ST    R3,SAVER3               Save end of old string in line
         LPR   R5,R7                   Make result absolute
         L     R4,SAVELST              First position line to change
         MVC   CARD(80),0(R4)          Save line.
         LA    R4,72(,R4)              Last position in line
         SR    R4,R3                   Length of remaining data
         SR    R4,R5                   -/- difference length old vs new
         AR    R3,R5                   + difference in line
         L     R5,SAVELST              Restore first position of line
         SR    R3,R5                   Offset
         LR    R5,R3                   Save offset
         LA    R3,CARD                 Copy of line
         LA    R3,0(R3,R5)             Add offset
         L     R5,SAVER3               End of old string in line
         BCTR  R4,0
         C     R4,=F'0'                Negative?
         BL    UPD3                    No: don't shift remaining data
         EX    R4,MOVE2                Shift the remaining data
         L     R4,SAVELST              Restore address line
         MVC   0(80,R4),CARD           Move in changed line
         B     UPD3                    Replace
UPD02B   DS    0H
         L     R3,SAVER2               Restore position.
         A     R3,LENGTH1              + length of old string
         L     R4,SAVELST              Load first position changed line
         LA    R4,72(,R4)              Last position in line (col 72)
         ST    R3,SAVER3               1st char after 'Old string'
         SR    R4,R3                   Length of remaining data
         BCTR  R4,0                    Discount for EX instruction
         MVC   CARD,BLANKS             Clear work-area
         C     R4,=F'0'                Last char of 1st str. in c 72?
         BL    UPD02B1                 Yes: do not move remaining data
         EX    R4,MOVE3                Move remaining data
UPD02B1  DS    0H
         SR    R3,R7
         AR    R4,R7                   Substitute blanks in rem. data
         EX    R4,MOVE4                Shift remaining data to the left
UPD3     DS    0H
*        Replace old string with new string
         NI    SW02,255-$NOMATCH       At least 1 line changed  @911218
         L     R6,SAVER6               Restore register 6.
         L     R5,LENGTH2
         LTR   R5,R5
         BZ    UPDEND                  New string has no length
         BCTR  R5,0                    Discount for EX instruction
         EX    R5,MOVE1                Move new character string
         OI    SW01,$CHANGED           Mark data changed
         B     UPDEND                  Return
MOVE1    MVC   0(0,R2),0(R6)           << executed >>
MOVE2    MVC   0(0,R3),0(R5)           << executed >>
MOVE3    MVC   CARD(0),0(R3)           << executed >>
MOVE4    MVC   0(0,R3),CARD            << executed >>
UPDWTO1  DS    0H
*        Message EDT006E, Invalid line number
         MVC   MSG99+4(60),MSG02       Invalid line number
         LA    R1,MSG99
         WTO   MF=(E,(1))              Msg: EDT006E
         B     UPDBK
UPDWTO2  DS    0H
         TM    SW02,$CHALL             Subcommand 'C ALL'?      @911218
         BO    UPDBK                   No: do not give message  @911218
*        Message EDT015E, Text not found
         MVC   MSG99+4(60),MSG12       Msg: Text not found
         LA    R1,MSG99
         WTO   MF=(E,(1))              Give message
         B     UPDBK
UPDEND   DS    0H
         TM    SW01,$VFY               List the line after Change?
         BNO   UPDBK                   No: return
         L     R2,SAVELST              Address of changed line
         MVC   MSG99+4(60),0(R2)       Move into WTO
         LA    R1,MSG99
         WTO   MF=(E,(1))              Inform operator
UPDBK    MVC   UPD01A+6(2),=S(UPD01B)  Restore branch address
         LM    R14,R12,SAVER           Restore the registers
         BR    R14                     Return
LENGTH1  DS    F                       Length of OLD character string
LENGTH2  DS    F                       Length of NEW character string
SAVER2   DS    F                       Save register 2
SAVER3   DS    F                       Save register 3
SAVER6   DS    F                       Save register 6
         TITLE 'F I N D      ROUTINE'
*---------------------------------------------------------------------*
*        This routine executes the 'F' subcommand                     *
*        The syntax is 1. 'F  $string$' or 2. 'F'                     *
*        If only an 'F' is entered, a repeat FIND of the previous     *
*        character string is executed.                                *
*------------------------------------------ (C)-2022 Skybird systems -*
         SPACE 2
FIND     DS    0H
         STM   R14,R12,SAVER           Save the registers
         CLI   REPLY4+2,C'$'           Delimiter ($) found?
         BNE   RFIND                   No: no operands, repeat FIND
         LA    R3,REPLY4+3             First byte of string
         LA    R4,56                   Maximum length of string
         XR    R6,R6                   Counter of length of string
         MVC   RSTRING,BLANKS          CLear previous string
         LA    R5,RSTRING
FIND001  DS    0H
         CLI   0(R3),C'$'              End delimiter found?
         BE    FIND007                 Yes: good
         MVC   0(1,R5),0(R3)           MOVE 1 BYTE STRING
         LA    R3,1(,R3)               Next byte in string
         LA    R5,1(,R5)               Incr output address
         LA    R6,1(,R6)               Incr count
         BCT   R4,FIND001              Repeat until end delimiter found
         MVC   MSG99+4(60),MSG21       Msg: invalid character string
         WTO   MF=(E,MSG99)            Inform operator/user
         MVC   RSTRING,BLANKS          Clear previous string
         B     FIND999
FIND007  DS    0H
         ST    R6,RLEN                 Save length of string
         L     R12,SAVEGETM            Start address of workspace
         ST    R12,RFINDAD             Save
         B     RFIND003                Continue
RFIND    DS    0H
         CLC   RSTRING,BLANKS          Previous string specified?
         BNE   RFIND001                Yes: continue
         MVC   MSG99+4(60),MSG22       Msg: Invalid repeat find ...
         WTO   MF=(E,MSG99)            Inform operator/user
         B     FIND999
RFIND001 L     R12,RFINDAD             Start with line of last match
RFIND003 CLC   0(2,R12),=X'FFFF'       End of workspace?
         BE    RFINDERR                Yes: error
         LR    R3,R12                  Copy register 12
         L     R6,RLEN                 Length of string to find
         BCTR  R6,0                    -/- for execute
         LA    R4,80                   Maximum BCT valye
         SR    R4,R6                   Minus length of string
         LA    R4,1(,R4)               + 1
RFIND005 DS    0H
         EX    R6,RFINDCMP             Compare with string
         BE    RFIND019                Yes: found, display line
         LA    R3,1(,R3)               Next byte in line
         BCT   R4,RFIND005             Loop until all done or found
         LA    R12,80(,R12)            Next record
         B     RFIND003                Next line to find string
RFIND019 DS    0H
         MVC   MSG99+9(55),0(R12)      Move contents of found line
         MVI   MSG99+8,C' '
         LR    R5,R12                  Current address
         XR    R4,R4                   Clear even register
         SL    R5,SAVEGETM             Minus start address workspace
         D     R4,=F'80'               Divide by record length
         LA    R5,1(,R5)               Increase by 1
         CVD   R5,DWB                  Make it packed
         UNPK  MSG99+4(4),DWB          Make it zoned
         OI    MSG99+7,X'F0'           and clear sign
         WTO   MF=(E,MSG99)            Issue message with found line
         MVC   MSG99+9(25),55(R12)     2ne part of line
         MVC   MSG99+34(30),BLANKS
         WTO   MF=(E,MSG99)            Display 2nd part of line
         LA    R12,80(,R12)            Point after line with match
         ST    R12,RFINDAD             Save that address
         B     FIND999                 End of routine
RFINDERR MVC   MSG99+4(60),MSG12       Msg: Text not found
         WTO   MF=(E,MSG99)            Inform operator/user
FIND999  DS    0H
         LM    R14,R12,SAVER           Restore registers
         BR    R14                     Return to caller
RFINDAD  DC    F'0'
RLEN     DC    F'0'
RFINDCMP CLC   0(0,R3),RSTRING         << executed >>
RSTRING  DC    CL56' '
         TITLE 'S U B M I T  ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        Routine to submit the job in the specified member in the     *
*        JOB execution queue.                                         *
*        An internal reader will be allocated to submit the job.      *
*        If the allocation fails, a S RDRTST command will be issued   *
*        to start a reader procedure to submit the job.            -  *
*                                                                     *
*------------------------------------------ (C)-2022 Skybird systems -*
         SPACE 2
SUB      DS    0H
         STM   R14,R12,SAVER           Save the registers
         TM    SW02,$OPER              SUBMIT via SUB=MSTR?
         BNO   SUB000                  No: branch
         LA    R1,MSG99
         MVC   MSG99+4(60),MSG24       Is not possible is subsystem
         WTO   MF=(E,(1))              Inform operator/user
         B     SUBEND2
SUB000   DS    0H
         LA    R1,BLKPTR               Allocation request bloc
         DYNALLOC                      Allocate
         LTR   R15,R15                 Allocation successful?
         BNZ   SUB009                  No: issued S RDRTST command
         MVC   INTRDR+DCBDDNAM-IHADCB(8),ALCDDNAM
*                                      Generated DDNAME
         OPEN  (INTRDR,(OUTPUT))       Open the INTRDR dataset
         L     R12,SAVEGETM            Start of workspace
*        Populate allocated INTRDR data set with records
SUB001   DS    0H
         CLC   0(2,R12),=X'FFFF'       End of data in workspace?
         BE    SUB003                  Yes: close the INTRDR
         PUT   INTRDR,(12)             Write
         LA    R12,80(,R12)            Next record in workspace
         B     SUB001                  Return
*        End of data of workspace, Job submitted (in the MVS way)
SUB003   DS    0H
         CLOSE INTRDR                  Close and unallocate.
         FREEPOOL INTRDR               Free the buffers
         B     SUBEND                  End of SUBMIT routine
SUB009   DS    0H                      Allocation failed
         SYCONVHX IN=ERROR,OUT=ERRORBC,L=2
*        Convert dynamic allocation error code to EBCDIC
         SYCONVHX IN=INFO,OUT=INFOBC,L=2
*        Convert dynamic allocation info code to EBCDIC
         LA    R1,MSG99                Prepare WTO
         MVC   MSG99+4(60),MSG15       Msg: DYNALLOC failed (EDT019E)
         WTO   MF=(E,(1))              Inform operator/user
         SPACE
         MVI   PARMRST,C' '            Clear ...
         MVC   PARMRST+1(L'PARMRST-1),PARMRST  ... field
         MVC   CMDL(2),=AL2(PARMRST-PARM10) initial command length
SUB010   DS    0H                      Start the rdr if alloc fails
         LA    R2,PARMRST              Load rest of parm
         LH    R3,CMDL                 Length
         LA    R4,JFCB                 Address of DSName
         LA    R5,44                   Maximum length of DSName
SUB010A  DS    0H                      Move DSName in parm
         CLI   0(R4),C' '              End of DSName reached?
         BE    SUB010B                 Yes: complete
         MVC   0(1,R2),0(R4)           Move 1 byte DSName
         LA    R2,1(,R2)               Next position input
         LA    R3,1(,R3)               Increase counter
         LA    R4,1(,R4)               Next position output
         BCT   5,SUB010A
SUB010B  DS    0H                      DSName = in parm
         MVC   0(4,R2),=C''',M='       Move keyword for member
         MVC   4(8,R2),JFCB+44         Member name in start command
         LA    R3,16(,R3)              Count length
         STH   R3,CMDL                 New length
*
*        Length is CMDL + actual length of DSNAME
*        + string ',M= + 8 bytes member name + 4 bytes prefix
*
         MODESET KEY=ZERO              Set key to zero for SVC 34
*
*        Issue SVC 34 to invoke the 'S RDRTST,D=...,M=...' command
*
         LA    R1,CMDL                 Parameter list
         XR    R0,R0
         SVC   34                      Issue the operator command
         MODESET KEY=NZERO             Back in problem mode
SUBEND   DS    0H                      End of SUBMIT routine
         L     R12,SAVEGETM            Start of workspace
         LA    R12,2(,R12)             Point after '//'
         LA    R2,8                    Maximum length of jobname
         MVC   JOBNAME(8),BLANKS       Clear jobname field in msg.
         LA    R3,JOBNAME
SUB012   DS    0H                      Build 'JOB SUBMITTED' message
         CLI   0(R12),C' '             End of job name?
         BE    SUB014                  Yes: display message
         MVC   0(1,R3),0(R12)          Move 1 character of jobname
         LA    R3,1(,R3)               Next position output
         LA    R12,1(,R12)             Next position input
         BCT   R2,SUB012               Loop until jobname complete
*        JOB is submitted
SUB014   DS    0H
         LA    R1,MSG99
         MVC   MSG99+4(60),MSG17       Msg: EDT012I Job submitted
         WTO   MF=(E,(1))              Inform operator/user
SUBEND2  DS    0H
         NI    SW01,X'FF'-$WKSUBM      Reset submit flag
         LM    R14,R12,SAVER           Restore the registers
         BR    R14                     Return
         TITLE 'Save routine'
SAVE     DS    0H
         STM   R14,R12,SAVER           Save registers
         L     R12,SAVEGETM            Start address workspace
         NI    SW01,X'FF'-$CHANGED     Reset flag changes made
         RDJFCB OUTDCB
SAV      DS    0H
         MVC   REPLY7(8),BLANKS        Clear reply area
         XC    ECB1,ECB1               Clear Event Control Block
         MVC   HHH-14(8),PARM33M       Member name in WTOR
         WTOR  'EDT026A Enter new name to save your workarea or reply 'X
               'U'' to save in member xxxxxxxx',                       X
               REPLY7,8,ECB1,ROUTCDE=(2,3)
HHH      WAIT  ECB=ECB1
         CLC   REPLY7(2),=C'U '
         BE    SAVE3                   Save under name if EDT009A
         CLI   REPLY7,C'$'             National characters allowed?
         BE    SAV001                  Yes: good
         CLI   REPLY7,C'@'             Also national character?
         BE    SAV001                  Yes: good
         CLI   REPLY7,C'#'             Also national character?
         BE    SAV001                  Yes: good
         TM    REPLY7,X'C0'            Character?
         BNO   SAV                     No: repeat WTOR EDT026A
         TM    REPLY7,X'F0'            1st char. must be alpaberic
         BO    SAV                     No: repeat WTOR EDT026A
SAV001   DS    0H
         MVC   JFCB+44(8),REPLY7       Newname to save into
         B     SAVE5                   Set newname into JFCB
SAVE3    DS    0H
         MVC   JFCB+44(8),PARM33M
SAVE5    DS    0H
         OI    JFCB+86,X'01'
         OPEN  (OUTDCB,(OUTPUT)),TYPE=J  Open input dataset for output
SAVE6    DS    0H
         CLC   0(2,R12),=X'FFFF'       End of data?
         BE    SAVE7                   Yes: save complete
         MVC   CARD(80),0(R12)         Line into record
         PUT   OUTDCB,CARD             Write record
         LA    R12,80(,R12)            Next line in workspace
         B     SAVE6                   Loop until all done
SAVE7    DS    0H
         L     R12,SAVEGETM            Start of workspace
         CLOSE (OUTDCB)
         FREEPOOL OUTDCB
         MVC   MSG20M,JFCB+44          Member name info message
         MVC   MSG99+4(60),MSG20       Msg: member successfully saved
         WTO   MF=(E,MSG99)            Inform operator/user
         LM    R14,R12,SAVER           Restore the registers
         BR    R14                     Return
         TITLE 'Regulate free format line numbers from REPLY4'
*---------------------------------------------------------------------*
*                                                                     *
*        Scan the line numbers, which are operands in the subcommands *
*        The maximum length of the line numbers is 4.                 *
*        The offset in REPLY4 (reply for subcommand) is placed        *
*        into register 1.                                             *
*        If one of the line numbers is in error, rc 4 is given        *
*        in register 15 and the msg EDT006E is given.                 *
*        If the operand is only 1 line number, line number 2 is the   *
*        same as line number 1 (these are two binary fullwords to be  *
*        returned).                                                   *
*                                                                     *
*------------------------------------------ (C)-2022 Skybird Systems -*
         SPACE 2
LINENUM  DS    0H                      Scan line numbers
         STM   R14,R12,SAVELIN         Save registers
         XC    LINERET,LINERET         Clear return code
         LR    R2,R1                   Save parameter
         ST    R2,OFFSRPL4             Save the offset in subcommand
         XC    LINENR1,LINENR1         Clear fields
         XC    LINENR2,LINENR2
         CLI   0(R2),C' '              No linenumbers provided??
         BE    LINEEND                 Yes: finished
         LA    R4,4                    4 = maximum length of line nbr
         XR    R5,R5                   Clear count register
LINE001  DS    0H
         CLI   0(R2),C' '              End of line number?
         BE    LINE005                 Yes: only 1 line number provided
         CLI   0(R2),C'-'              Range of line number?
         BE    LINE007                 Yes: there is a second linenbr
         CLI   0(R2),C','              Comma instead of hyphen?
         BE    LINE007                 Yes: there is a second linenbr
         CLI   0(R2),C'0'              Numeric test
         BL    LINEERR                 Error if <0
         CLI   0(R2),C'9'              Numeric test
         BH    LINEERR                 Error if >9
         LA    R5,1(,R5)               Count length of line number
         LA    R2,1(,R2)               Next position
         BCT   R4,LINE001              Loop until complete
         CLI   0(R2),C' '              Only 1 line number?
         BNE   LINE007                 No: carry on
LINE005  DS    0H
         BAL   R6,LINEBIN              Make line number binary
         ST    R7,LINENR1              And save the result
         ST    R7,LINENR2              Line 2 is the same as line 1
         LA    R2,1(,R2)
         ST    R2,OFFSET               For subcommand 'C'
         B     LINEEND
LINE007  DS    0H                      We have 2 line numbers
         TM    SW01,$C#CMD             Do we have the subcommand 'C'?
         BO    LINE005                 Yes: subcommand 'C' do not have
*                                      a second line number.
         LA    R2,1(,R2)
         ST    R2,OFFSET               For 'C' subcommand
         BAL   R6,LINEBIN              Make line number binary
         ST    R7,LINENR1              Save the result
         ST    R2,OFFSRPL4             And save the offset
         LA    R4,4                    For BCT instruction
         XR    R5,R5                   Clear count register
LINE009  DS    0H
         CLI   0(R2),C' '              End of line number?
         BE    LINE011                 Yes: good, branch
         CLI   0(R2),C'0'              Numeric test
         BL    LINEERR                 Error if <0
         CLI   0(R2),C'9'              Numeric test
         BH    LINEERR                 Error if >9
         LA    R5,1(,R5)               Count position
         LA    R2,1(,R2)               Next position line number
         BCT   R4,LINE009
LINE011  DS    0H
         BAL   R6,LINEBIN              Make line number binary
         ST    R7,LINENR2              Save line number 2
         CLC   LINENR2,LINENR1         Line number 2 >= line number 1?
         BNL   LINEEND                 Yes: good
LINEERR  DS    0H                      Line number error
         MVC   MSG99+4(60),MSG02       Msg: EDT006E Invalid line number
         WTO   MF=(E,MSG99)            Inform operator/user
         LA    R1,4
         ST    R1,LINERET              Return code
LINEEND  DS    0H
         LM    R14,R12,SAVELIN         Restore registers
         L     R15,LINERET             Return code
         BR    R14                     Return to caller
*
LINEBIN  DS    0H                      Make line numbers binary
         L     R3,OFFSRPL4             Start address of line number
         LTR   R5,R5                   Length zero?
         BZ    LINEERR                 Yes: linenumber not found
         BCTR  R5,0                    Decrease for execute
         EX    R5,LINEPK               Pack the line
         CVB   R7,DWB                  Make binary
         LTR   R7,R7                   Line number = 0?
         BZ    LINEERR                 Yes: error
         C     R7,=F'3999'             Maximum number of lines?
         BH    LINEERR                 Yes: error
         BR    R6                      Return
LINEPK   PACK  DWB(8),0(0,R3)          << executed >>
         TITLE 'ESTAE EXIT ROUTINE'
STAEEXIT DS    0H
         DROP
         USING *,R15                   Get temporary addressability
         USING SDWA,R1                 Make SDWA addressable
         LM    R9,R13,RECOVER
         DROP  R15
         USING SAVEA,R13,R11,R10,R9    Restore addressability   @911224
         XR    R2,R2                   Clear register 2
         ICM   R2,7,SDWACMPC           Insert completion code
         SRL   R2,12                   Move out user completion code
         STH   R2,SYSTEMCC             And save
         CLI   RETRYCNT,5              More than 5 retrues?     @911218
         BNH   SETRP4                  No: retry                @911218
         SETRP RC=0,DUMP=YES           Else: percolate          @911218
         BR    R14                     Return to RTM            @911218
         DROP  R1                      Kill addressability
SETRP4   DS    0H                                               @911218
         SETRP RC=4,RETADDR=RET,RETREGS=NO,FRESDWA=YES,DUMP=NO
         BR    R14
SYSTEMCC DS    H
         TITLE 'ESTAE retry routine'
RET      DS    0H
         DROP
         USING *,R15
         LM    R9,R13,RECOVER          Restore registers
         L     R2,REG2                 Save count register
         DROP  R15
         USING SAVEA,R13,R11,R10,R9    Restore addressability   @911224
         XR    R1,R1                   Clear register           @911218
         IC    R1,RETRYCNT             # ABEND retries          @911218
         LA    R1,1(,R1)               Increase                 @911218
         STC   R1,RETRYCNT             And save                 @911218
         SYCONVHX IN=SYSTEMCC,OUT=SAVECC,L=2
         MVC   MSG23+13(3),SAVECC+1    Completion code
         MVC   MSG99+4(60),MSG23       Msg EDT027D AbendXXX detacted
         WTO   MF=(E,MSG99)            Inform operator/user
         CLOSE OUTDCB                  Close
         TM    SW02,$OPEN              DCB opened?              @911218
         BNO   RET2                    No: bypass FREEPOOL      @911218
         FREEPOOL OUTDCB
         NI    SW02,255-$OPEN          OUTDCB is closed         @911218
RET2     DS    0H                                               @911218
         MVC   OUTDCB(DCBLEN),COPYDCB  Refresh
         CLOSE PDSDCB                        all
         CLOSE PRTDCB                            possible DCB's
         NI    PARMSW,255-$RENDS       Reset rename flag        @930729
         TM    SW02,$SUBMODE           Are we in subcommand mode?
         BO    CHANGE                  Yes: prompt for subcommand
         B     TSTVSST                 Else prompt for command
REG2     DC    F'0'
RECOVER  DS    5F
SAVECC   DS    CL4
         TITLE 'Allocation control blocks'
         SPACE 2
         DS    0F
BLKPTR   DC    AL1(128),AL3(REQBLK)
*
REQBLK   DC    AL1(20)                 Length of request block
VERB     DC    X'01'                   DSName allocation (1)
FLAGS1   DC    X'2000'
ERROR    DC    H'0'                    DYNALLOC error code
INFO     DC    H'0'                    DYNALLOC info code
         DC    A(SYSOUT)               SYSOUT text unit list
RESERVED DC    F'0'
FLAGS2   DC    F'0'                    Flags 2
*
SYSOUT   DS    0F
         DC    A(SYSKEY)               SYSOUT specification TU
         DC    A(UNALLKEY)             Free = Close TU
SYSINT   DC    A(INTKEY)               Internal reader TU
         DC    AL1(128),AL3(DDNAMKEY)
*
         DS    0H
SYSKEY   DC    X'0018'                 SYSOUT Specification
SYSNBR   DC    AL2(1)                  #
SYSLEN   DC    AL2(1)                  Len
SYSCLS   DC    C'C'                    SYSOUT classe
*
CLSTAB   DC    256X'FF'                Translate table for SYSOUT cls
         ORG   CLSTAB+C'A'
         DC    9X'00'
         ORG   CLSTAB+C'J'
         DC    9X'00'
         ORG   CLSTAB+C'S'
         DC    8X'00'
         ORG   CLSTAB+C'0'
         DC    10X'00'
         ORG
*
         DS    0H
UNALLKEY DC    X'001C'                 Unallocate at close (FREE=CLOSE)
UNALLNBR DC    AL2(0)                  #
UNALLLEN DS    0H                      No length
UNALLPRM DS    0H                      No parm
*
INTKEY   DC    X'0019'                 Internal reader
INTNBR   DC    AL2(1)                  #
INTLEN   DC    AL2(6)                  Len
INTPARM  DC    C'INTRDR'               Parm
*
         DS    0H
DDNAMKEY DC    X'0055'                 Return DDNAME text unit
         DC    AL2(1)                  #
DDNAMLEN DC    AL2(8)                  Len
ALCDDNAM DC    CL8' '                  Return DDNAME from SVC 99
*
LINECNT  DC    PL2'0'                  Line counter PRINT routine
PAGECNT  DC    PL2'0'                  Page counter PRINT routine
         DC    C' '
LINE     DS    CL121
HEADLINE DC    CL53'1(C) TSTVS Skybird systems: PRINT of modified membeX
               r '
HEADMEM  DS    CL8
         DC    CL40' '
         DC    C'Page '
HEADCNT  DS    CL3
         DC    CL12' '
         TITLE 'DATA CONTROL BLOCKS'
         PRINT  NOGEN
OUTDCB   DCB   LRECL=80,MACRF=(GL,PM),DDNAME=OUTP01,EXLST=EXLST,       X
               DSORG=PS,RECFM=FB,EODAD=LOAD9
DCBLEN   EQU   *-OUTDCB
COPYDCB  DCB   LRECL=80,MACRF=(GL,PM),DDNAME=OUTP01,EXLST=EXLST,       X
               DSORG=PS,RECFM=FB,EODAD=LOAD9
PDSDCB   DCB   DDNAME=INP01,MACRF=R,DSORG=PO,RECFM=F,BLKSIZE=256
INTRDR   DCB   DDNAME=INTRD,MACRF=PM,LRECL=80,RECFM=F,                 X
               BLKSIZE=80,DSORG=PS
PRTDCB   DCB   DDNAME=INTRD,MACRF=PM,LRECL=121,RECFM=FBA,              X
               BLKSIZE=1210,DSORG=PS
         PRINT GEN
         TITLE 'GENERAL EQUATES'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE 'Working storage'
ECB1     DC    F'0'
MSGID    DC    F'0'                    MSGID of start msg       @930729
CARD     DS    0CL80                   Output record
REPLY    DC    CL72' '                 Reply for input data
REPLY2   DC    CL8'0'                  Reply for sequence number
BLANKS   DC    80CL1' '
SAVEGETM DC    F'0'                    Start of workspace
SAVELST  DC    F'0'                    Save field for UPDIPL routine
DWB      DC    D'0'
REPLY4   DC    CL60' '                 Reply for line number
REPLY6   DC    CL3'   '                Reply for continuation
REPLY7   DS    CL8
REPLY8   DC    CL4' '                  Reply for EDT025A
COMMAND  DS    CL6
*
ADDRTIOT DS    A                       For password control
*
SAVELIN  DC    18F'0'                  Save area form LINENUM
OFFSRPL4 DS    F
OFFSET   DS    F                       Offset in REPLY4 for 'C' subc.
LINENR1  DS    F
LINENR2  DS    F
LINERET  DS    F                       Return code LINENUM routine
*
BLDLLIST DS    0H                      List entry for BLDL
N1       DC    AL2(1)                  # entries
L1       DC    AL2(14)                 Length of directory entry
BLDLM    DS    CL8
         DS    CL6
*
PARM     EQU   *
PARMSW   DC    X'00'
ALLC     EQU   X'80'                   Set by TSTVSALL
NBRS     EQU   X'20'                   Set by TSTVSCOM
UPDT     EQU   X'10'                   Set by TSTVSCOM, subcommand mode
$UNALL   EQU   X'08'                   TSTVSALL does only an unallocate
$RENAME  EQU   X'04'                   IF ON: RENAME MEMBER     @TSTV02
$RENDS   EQU   X'02'                   IF ON: RENAME A dataset  @930729
PARMROUT DC    X'6000'                 Default routing code (2,3)
*
PARM33   DS    0CL25                   Commarea passed by 'com' @930726
PARM33M  DS    CL8                     Member name of TSTVSCOM
PARM33R  DS    CL8                     Newname from tstvscom    @930726
PARM33KY DS    CL8                     Key 'PDSLIST,key'        @930726
PARM33KL DS    C                       Actual key length        @930726
*
RETRYCNT DC    XL1'00'                 Retry counter abends
SW01     DC    XL1'00'
$EOJ     EQU   128          1 = EOJ subcommand or EOJ command
$C#CMD   EQU   64           1 = 'C' subcommand for LINENUM routine
$WKSUBM  EQU   32           1 = SUBMIT workspace
$CHANGED EQU   16           1 = changes made and not yet saved
$VFY     EQU   8            1 = V ON,   0 = V OFF
$LINEDEL EQU   4            1 = Line deletion requested
$MEMFND  EQU   2            1 = membername present
$XLST    EQU   1            1 = execute extended list 0 = normal LIST
SW02     DC    XL1'00'
$SUBMODE EQU   128          1 = Subcommand mode entered
$OPER    EQU   64           1 = SUBMIT and PRINT not allowed, because
*                               TSTVS operates as a primary subsystem
$OPEN    EQU   32           1 = OUTDCB opened                  @911218
$CHALL   EQU   16           1 = executing subcommand 'C ALL'   @911218
$NOMATCH EQU   8            1 = no match in 'C ALL'            @911218
PACKFLD  DC    PL3'0'
WTOCNT   DC    PL2'0'
SAVER    DC    15F'0'
MEMBAREA DC    256X'00'                To contain directory block
         DS    0F
EXLST    DC    X'87',AL3(JFCB)         RDFJCB exit of DCB
JFCB     DS    CL176
HELP1    DS    CL80
HELP2    DS    CL80
CMDL     DS    H                       Length of command including pfx
         DC    H'0'                    Reserved
PARM10   DC    C'START RDRTST,D='''
PARMRST  DC    CL60' '
         DS    0H
         TITLE 'M E S S A G E    B L O C K'
MSG02    DC    CL60'EDT006E Invalid line-number, reply again'
MSG03    DC    C'EDT007E Parameter error, defaults taken (ROUTCDE=2,3) X
                     '
MSG04    DC    CL60'EDT008E seq. number not numeric, reply again'
MSG05    DC    C'EDT010E Member-name to be updated not present. ReenterX
                     '
MSG06    DC    CL15'EDT011I Member '
WTOMEM   DC    CL8' '
         DC    CL1' '
NOT      DC    CL3'   '
RENDEL   DC    CL8'        '
RTRNTEXT DC    CL25' '
MSG07    DC    C'EDT012E Maximum lines in member, insertion impossible.X
                     '
MSG08    DC    CL60'EDT013I Dataset has been re-numbered'
MSG09    DC    C'EDT014I SUBCOMMANDS                                   X
                     '
MSG10    DC    C'        XXX;       replace the line, EDT003A follows. X
                     '
MSG11    DC    C'        I XXX;     insert a line , EDT003A follows.   X
                     '
MSG11A   DC    C'        D XXX OR D XXX,YYY delete a line or a range ofX
                Lines'
MSG11B   DC    C'        R XXX      repeat the specified line after curX
               rent  '
MSG11C   DC    C'        L(IST),L(IST) x or L(IST) x,y List entire or lX
               inenrs'
MSG11D   DC    C'        XLST       same as list, but 80 positions dispX
               layed '
MSG11E   DC    C'        RENUM;     renumber cols 73-80 of the member  X
                     '
MSG11F   DC    C'        UNNUM;     remove numbers of cols 73-80       X
                     '
MSG11G   DC    C'        V ON/OFF;  list or not list line after "C" comX
               mand  '
MSG11H   DC    C'        ADD;       add lines at the end of the member X
                     '
MSG11I   DC    C'        SUBMIT;    submit the contents of the workareaX
                     '
MSG11J   DC    C'        C XXX,string1$string2$ modify character stringX
               s     '
MSG11K   DC    C'        F $string$ find string or "F" repeat find of sX
               tring '
MSG11L   DC    C'        PRINT x;   print spinoff sysout of workarea   X
                     '
MSG11M   DC    C'        SAVE;      save workarea in the member        X
                     '
MSG11N   DC    C'        END;       end of subcommands and ask for nextX
                cmd. '
MSG11O   DC    C'        EOJ;       terminate TSTVS from subcommand modX
               e.    '
MSG12    DC    CL60'EDT015E string(s) not found'
MSG13    DC    CL8'EDT016I '
MSGNAME  DS    CL52
         DS    0F
MSG14    DC    C'EDT018I function terminated by operator               X
                     '
MSG15    DC    CL30'EDT019E Dyn. ALLOC. errorcode '
ERRORBC  DS    CL4
         DC    CL10' Infocode '
INFOBC   DS    CL4
         DC    12C' '
MSG17    DC    CL12'EDT021I job '
JOBNAME  DS    CL8
         DC    CL10' submitted'
         DC    30C' '
MSG18    DC    C'EDT022I  verification turned '   29
ONOFF    DS    CL3                                 3
         DC    CL28' '
MSG19    DC    C'EDT023I '             Msg after PRINT command
MSG19#L  DS    CL4                     # lines printed
         DC    C' lines printed in SYSOUT='
MSG19CLS DS    C
         DC    CL22' '
MSG20    DC    CL15'EDT024I member '   Member successfully saved
MSG20M   DC    CL8' '                  Saved member
         DC    CL19' successfully saved'
         DC    CL18' '
MSG21    DC    CL60'EDT025E invalid character string'
MSG22    DC    CL60'EDT026E invalid repeat find, no string found'
MSG23    DC    CL60'EDT027D ABENDXXX detected, retry successful' 13
MSG24    DC    CL60'EDT028E allocation subsystem dataset not allowed'
MSG99    WTO   '                                                       X
                    ',ROUTCDE=(2,3),MF=L
ZZZ      EQU   *
*
         TITLE 'Literal pool'
         LTORG
         TITLE 'DSECTS'
         PRINT NOGEN
         DCBD  DSORG=PS,DEVD=DA
         IHASDWA
         END
